name: Docker CI/CD

on:
  push:
    branches:
      - main
    
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: launch-2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ensure container is running
        run: |
          if [ ! "$(docker ps -q -f name=test1)" ]; then
            if [ "docker ps -aq -f name=test1" ]; then
              echo "Starting existing container..."
              docker start test1
            else
              echo "Creating a new container...."
              docker run -d --name test1 ubuntu:latest sleep infinity
            fi
          else
            echo "Container is already running."
          fi
      - name: Copy repository files to container
        run: |
          docker cp . test1:/app
      - name: Install Python and required packages in container
        run: |
          docker exec test1 bash -c "apt-get update && apt-get install -y python3 python3-pip"
            
            # Install any Python packages your script might need
            
  
      - name: Execute Python script and echo the result
        run: |
          RESULT=$(docker exec test1 bash -c "python3 /app/tar.py")
            
            # Echo the result
          echo "Script result: $RESULT"
          RESULT=$(docker exec test1 bash -c "python3 /app/tar1.py")
          echo "Script result: $RESULT"
          RESULT=$(docker exec test1 bash -c "python3 /app/tar2.py")
          echo "Script result: $RESULT"
      - name: Apply changes
        run: |
          docker exec test1 bash -c "cd /app && echo 'New deployment'"
